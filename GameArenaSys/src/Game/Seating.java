/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Game;
import java.awt.Color;
import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Seating extends javax.swing.JFrame{
    private static Connection connection;
    private static Statement statement;
    public ArrayList<Seat> seats = new ArrayList<Seat>();
    private String ticketId;
    private String seatId;
    private String price;
    private String status;
    private int gameNum;
    public String username;
    
    /**
     * Creates new form Seating
     */
    
    public Seating() throws SQLException{
        initComponents();
        getContentPane().setBackground(Color.WHITE);
    }
    
    public Seating(int gameNum) throws SQLException{
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        this.gameNum = gameNum;
    }
    
    public Seating(int gameNum, String username) throws SQLException{
        initComponents();
        getContentPane().setBackground(Color.WHITE);
        this.gameNum = gameNum;
        this.username = username;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner = new javax.swing.JPanel();
        creationNation = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        sectionA = new javax.swing.JButton();
        sectionB = new javax.swing.JButton();
        sectionC = new javax.swing.JButton();
        sectionD = new javax.swing.JButton();
        arena = new javax.swing.JLabel();
        errorMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1110, 700));
        setSize(new java.awt.Dimension(1110, 700));

        banner.setBackground(new java.awt.Color(8, 52, 108));

        creationNation.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        creationNation.setForeground(new java.awt.Color(255, 255, 255));
        creationNation.setText("SoftwareCreationNation");

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/helentran/NetBeansProjects/GameArenaSys/Images/LogoBanner.png")); // NOI18N

        backButton.setText("Back to schedule");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bannerLayout = new javax.swing.GroupLayout(banner);
        banner.setLayout(bannerLayout);
        bannerLayout.setHorizontalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bannerLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(creationNation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(26, 26, 26))
        );
        bannerLayout.setVerticalGroup(
            bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bannerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(bannerLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(bannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creationNation)
                    .addComponent(backButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sectionA.setText("Section A");
        sectionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionAActionPerformed(evt);
            }
        });

        sectionB.setText("Section B");
        sectionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionBActionPerformed(evt);
            }
        });

        sectionC.setText("Section C");
        sectionC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionCActionPerformed(evt);
            }
        });

        sectionD.setText("Section D");
        sectionD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sectionDActionPerformed(evt);
            }
        });

        arena.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arena.setIcon(new javax.swing.ImageIcon("/Users/helentran/NetBeansProjects/GameArenaSys/Images/court.jpeg")); // NOI18N

        errorMsg.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(banner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sectionA)
                    .addComponent(sectionC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sectionB)
                    .addComponent(sectionD))
                .addGap(136, 136, 136))
            .addGroup(layout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addComponent(arena)
                .addContainerGap(354, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(errorMsg)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(banner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorMsg)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sectionA)
                    .addComponent(sectionB))
                .addGap(58, 58, 58)
                .addComponent(arena)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sectionD)
                    .addComponent(sectionC))
                .addGap(245, 245, 245))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setTicketId(String ticketId){
        this.ticketId = ticketId;
    }
    
    public void setSeatId(String seatId){
        this.seatId = seatId;
    }
    
    public void setPrice(String price){
        this.price = price;
    }
    
    public String getTicketId( ) {
        return ticketId;
    }
    
    public String getSeatId() {
        return seatId;
    }
    
    public String getPrice() {
        return price;
    }

    private void sectionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionAActionPerformed
        // Sets an error message if user is not logged in. Otherwise, load the seats and redirect user to Purchase page
        if (username == null){
            errorMsg.setText("Please sign in to continue");
        }
        else{
            try{
                Game game = new Game(gameNum);
                seats = game.loadSectionSeats("A");
                // Redirect
                Purchase purchaseFrame = new Purchase(seats, gameNum, username);
                purchaseFrame.setVisible(true);
                this.dispose();
            }
            catch (SQLException error){
                error.printStackTrace();
            }
        }
    }//GEN-LAST:event_sectionAActionPerformed

    private void sectionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionBActionPerformed
        // Sets an error message if user is not logged in. Otherwise, load the seats and redirect user to Purchase page
        if (username == null){
            errorMsg.setText("Please sign in to continue");
        }
        else{
            try{
                Game game = new Game(gameNum);
                seats = game.loadSectionSeats("B");
                // Redirect
                Purchase purchaseFrame = new Purchase(seats, gameNum, username);
                purchaseFrame.setVisible(true);
                this.dispose();
            }
            catch (SQLException error){
                error.printStackTrace();
            }
        }
    }//GEN-LAST:event_sectionBActionPerformed

    private void sectionCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionCActionPerformed
        // Sets an error message if user is not logged in. Otherwise, load the seats and redirect user to Purchase page
        if (username == null){
            errorMsg.setText("Please sign in to continue");
        }
        else{
            try{
                Game game = new Game(gameNum);
                seats = game.loadSectionSeats("C");
                // Redirect
                Purchase purchaseFrame = new Purchase(seats, gameNum, username);
                purchaseFrame.setVisible(true);
                this.dispose();
            }
            catch (SQLException error){
                error.printStackTrace();
            }
        }
    }//GEN-LAST:event_sectionCActionPerformed

    private void sectionDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sectionDActionPerformed
        // Sets an error message if user is not logged in. Otherwise, load the seats and redirect user to Purchase page
        if (username == null){
            errorMsg.setText("Please sign in to continue");
        }
        else{
            try{
                Game game = new Game(gameNum);
                seats = game.loadSectionSeats("D");
                // Redirect
                Purchase purchaseFrame = new Purchase(seats, gameNum, username);
                purchaseFrame.setVisible(true);
                this.dispose();
            }
            catch (SQLException error){
                error.printStackTrace();
            }
        }
    }//GEN-LAST:event_sectionDActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // Redirect to the schedule page
        SchedulePage schedulePageFrame = new SchedulePage(username);
        schedulePageFrame.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Seating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Seating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Seating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Seating.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
//                                    try {
//                    try {
//                        Class.forName("org.sqlite.JDBC");
//                    } catch (ClassNotFoundException ex) {
//                        Logger.getLogger(Seating.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                    new Seating().setVisible(true);
//                } catch (SQLException ex) {
//                    Logger.getLogger(Seating.class.getName()).log(Level.SEVERE, null, ex);
//                }
                new Seating().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Seating.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arena;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel banner;
    private javax.swing.JLabel creationNation;
    private javax.swing.JLabel errorMsg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton sectionA;
    private javax.swing.JButton sectionB;
    private javax.swing.JButton sectionC;
    private javax.swing.JButton sectionD;
    // End of variables declaration//GEN-END:variables

}
